name: Deploy to GitHub Pages

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      #- name: Install Dependencies
       # run: |
        #  npm install -g @slidev/cli
         # npm install

      # Build OpenAPI docs
      - name: Copy OpenAPI files
        run: |
          mkdir -p build/api
          cp -r api/* build/api/

      # Build arc42 docs with AsciiDoc
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Install AsciiDoctor
        run: gem install asciidoctor

      - name: Build arc42 Documentation
        run: |
          mkdir -p build/arc42
          asciidoctor "arc42/index.adoc" -o "build/arc42/index.html"

      # Build sli.dev slides
#      - name: Build sli.dev Slides
#        run: |
#          mkdir -p build/slides
#          cd slides
#          for dir in */; do
 #           if [ -f "$dir/package.json" ]; then
 #             cd "$dir"
 #             npm install
 #             npx slidev build --base "/${{ github.event.repository.name }}/slides/$(basename "$dir")/"
 #             mkdir -p ../../build/slides/$(basename "$dir")
 #             cp -r dist/* ../../build/slides/$(basename "$dir")/
 #             cd ..
 #           else
 #             npx slidev build "$dir/slides.md" --base "/${{ github.event.repository.name }}/slides/$(basename "$dir")/"
 #             mkdir -p ../build/slides/$(basename "$dir")
 #             cp -r dist/* ../build/slides/$(basename "$dir")/
 #             rm -rf dist
 #           fi
 #         done
 #         cd ..

      # Create main index.html that links to all resources
      - name: Create main index.html
        run: |
          cat > build/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Project Documentation</title>
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                line-height: 1.6;
              }
              h1 { border-bottom: 1px solid #eee; padding-bottom: 10px; }
              ul { padding-left: 25px; }
              li { margin: 10px 0; }
              a { color: #0366d6; text-decoration: none; }
              a:hover { text-decoration: underline; }
              .section { margin-bottom: 30px; }
            </style>
          </head>
          <body>
            <h1>Project Documentation</h1>
          
            <div class="section">
              <h2>API Documentation</h2>
              <ul>
                <li><a href="./api/index.html">OpenAPI Documentation</a></li>
              </ul>
            </div>
          
            <div class="section">
              <h2>Architecture Documentation (arc42)</h2>
              <ul>
          EOL

          # Dynamically add links to arc42 docs
          for file in build/arc42/*.html; do
            filename=$(basename "$file")
            name="${filename%.*}"
            echo "        <li><a href=\"./arc42/$filename\">$name</a></li>" >> build/index.html
          done

          cat >> build/index.html << 'EOL'
              </ul>
            </div>
          
            <div class="section">
              <h2>Presentations</h2>
              <ul>
          EOL

          # Dynamically add links to slidev presentations
          for dir in build/slides/*/; do
            dirname=$(basename "$dir")
            echo "        <li><a href=\"./slides/$dirname/\">$dirname</a></li>" >> build/index.html
          done

          cat >> build/index.html << 'EOL'
              </ul>
            </div>
          </body>
          </html>
          EOL

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4